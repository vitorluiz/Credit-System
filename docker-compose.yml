version: '3.8'

# Docker Compose configuration for the credit system.  Three services
# are defined:
#
# 1. db – A PostgreSQL 17.6 instance. According to the PostgreSQL
#    release notes, version 17.6 was released on 14 August 2025【569261934527690†L10-L14】.  The database
#    stores all user records.
# 2. backend – A Node.js 22 application exposing a REST API for
#    registration, login, password reset and retrieving the current
#    user's profile.
# 3. frontend – An Nginx server that serves a Vite‑built React app.
#
# To start all services run `docker compose up --build` from the
# project root. Once running the application will be accessible at
# http://localhost:3000.

services:
  db:
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d credit_system"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  backend:
    build: ./backend
    environment:
      PGHOST: ${PGHOST}
      PGPORT: ${PGPORT}
      PGUSER: ${POSTGRES_USER}
      PGPASSWORD: ${POSTGRES_PASSWORD}
      PGDATABASE: ${POSTGRES_DB}
      JWT_SECRET: ${JWT_SECRET}
      APP_BASE_URL: ${APP_BASE_URL}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      SMTP_FROM: ${SMTP_FROM}
      SMTP_SECURE: ${SMTP_SECURE}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "4000:4000"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:4000/api/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  frontend:
    build: ./frontend
    depends_on:
      - backend
    ports:
      - "3000:80"

volumes:
  db_data:
